apiVersion: v1
kind: ConfigMap
metadata:
  name: drkiq-config
  labels:
    config: drkiq
data:
 # You would typically use `rake secret` to generate a secure token. It is
 # critical that you keep this value private in production.
  SECRET_TOKEN: asecuretokenwouldnormallygohere
  WORKER_PROCESSES: "1"  
  LISTEN_ON: 0.0.0.0:8000
  # Everything else is standard Rails configuration for a PostgreSQL database.
  DATABASE_URL: postgresql://drkiq:yourpassword@postgres:5432/drkiq?encoding=utf8&pool=5&timeout=5000
  # Both of these values are using the same Redis address but in a real
  # production environment you may want to separate Sidekiq to its own instance,
  # which is why they are separated here.
  #
  # We'll be using the same Docker link trick for Redis which is how we can
  # reference the Redis hostname as `redis`.
  CACHE_URL: redis://redis:6379/0
  JOB_WORKER_URL: redis://redis:6379/0
